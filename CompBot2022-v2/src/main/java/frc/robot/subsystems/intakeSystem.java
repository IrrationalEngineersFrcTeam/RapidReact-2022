// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

package frc.robot.subsystems;


import frc.robot.Constants;
import frc.robot.commands.*;
//import edu.wpi.first.wpilibj.drive.RobotDriveBase.MotorType;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

import com.ctre.phoenix.motorcontrol.NeutralMode;
import com.ctre.phoenix.motorcontrol.TalonFXInvertType;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonFX;
import edu.wpi.first.wpilibj.motorcontrol.MotorController;
import edu.wpi.first.wpilibj.motorcontrol.PWMSparkMax;
import com.revrobotics.CANSparkMax;
import com.revrobotics.CANSparkMaxLowLevel.MotorType;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class intakeSystem extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
        private WPI_TalonFX lowerIntakeMotor;
        private CANSparkMax intakeWheelMotor;
        private boolean intakeMotorRunning;
        private boolean inverted;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    /**
    *
    */
    public intakeSystem() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
            lowerIntakeMotor = new WPI_TalonFX(5, "rio");
            inverted = false;
            intakeMotorRunning = false;

            intakeWheelMotor = new CANSparkMax(7, MotorType.kBrushless);
            intakeWheelMotor.restoreFactoryDefaults();
            intakeWheelMotor.setInverted(false);

            lowerIntakeMotor.setInverted(TalonFXInvertType.Clockwise);
            lowerIntakeMotor.setNeutralMode(NeutralMode.Brake);
            


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void periodic() {
        if (intakeMotorRunning) {
         intakeWheelMotor.set(0.25);
        }
        else {
            intakeWheelMotor.set(0.0);
        }
        // This method will be called once per scheduler run

    }

    public void startMotor() {
        intakeMotorRunning = true;
    }

    public void stopMotor() {
        intakeMotorRunning = false;
    }

    public void lowerIntake() {
        lowerIntakeMotor.set(0.15);
    }

    public boolean isIntakeRunning() {
        return intakeMotorRunning;
    }

    public void changeDirection() {
        inverted = !inverted;
        intakeWheelMotor.setInverted(inverted);
    }


    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}


// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

package frc.robot.subsystems;

 
import frc.robot.Constants;
import frc.robot.commands.*; 
import edu.wpi.first.wpilibj.livewindow.LiveWindow; 
import edu.wpi.first.wpilibj2.command.SubsystemBase; 
 
// Add imports for WPI_TalonFX FX motors 
import com.ctre.phoenix.motorcontrol.ControlMode; 
import com.ctre.phoenix.motorcontrol.InvertType; 
import com.ctre.phoenix.motorcontrol.TalonFXInvertType; 
import com.ctre.phoenix.motorcontrol.can.WPI_TalonFX; 
import com.revrobotics.CANSparkMax;
import com.revrobotics.CANSparkMaxLowLevel.MotorType;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS 
import edu.wpi.first.wpilibj.motorcontrol.MotorController; 
import edu.wpi.first.wpilibj.motorcontrol.Talon; 
 
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS 
 
 
/** 
 * 
 */ 
public class intakeSystem extends SubsystemBase { 
    private boolean motorRunning; 
    private double wheelSpeed; 
    private double intakeMotorPos; 
    private WPI_TalonFX m_lowerIntakeMotor; 
    private CANSparkMax m_intakeWheelMotor; 
    
    int loops;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS 
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS 
 
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS 
    private Talon m_intake; 
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS 
     
    /** 
    * 
    */ 
    public intakeSystem() { 
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS 
        m_intake = new Talon(5); 
        addChild("m_intake",m_intake); 
        m_intake.setInverted(false);
        loops = 0;
 
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS 
        m_intakeWheelMotor = new CANSparkMax(Constants.DriveConstants.kIntakeWheelMotorPort, MotorType.kBrushless);
        m_intakeWheelMotor.restoreFactoryDefaults();

    } 
 
    @Override 
    public void periodic() { 
        // This method will be called once per scheduler run 
        if (loops == 0) {
            m_intakeWheelMotor.set(0.25);
        }
        else if (loops > 99999999) {
            m_intakeWheelMotor.set(0.0);
        }
        loops = loops + 1;
    } 
 
    @Override 
    public void simulationPeriodic() { 
        // This method will be called once per scheduler run when in simulation 
 
    } 
 
    // Put methods for controlling this subsystem 
    // here. Call these from Commands. 
 
} 
 
 